apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'signing'

def sonatypeRepositoryUrl
if (isReleaseBuild()) {
  println 'RELEASE BUILD'
  sonatypeRepositoryUrl = hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
      : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else {
  println 'DEBUG BUILD'
  sonatypeRepositoryUrl = hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
      : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
  return hasProperty('MAVEN_USERNAME') ? nexusUsername : ""
}

def getRepositoryPassword() {
  return hasProperty('MAVEN_PASSWORD') ? nexusPassword : ""
}

publishing {
  repositories {
    maven {
      credentials {
        username getRepositoryUsername()
        password getRepositoryPassword()
      }
      url = sonatypeRepositoryUrl
    }
  }
  publications {
    mavenAar(MavenPublication) {
      pom {
        name = POM_NAME
        packaging = POM_PACKAGING
        description = POM_DESCRIPTION
        url = POM_URL
        licenses {
          license {
            name = POM_LICENCE_NAME
            url = POM_LICENCE_URL
          }
        }
        developers {
          developer {
            id = POM_DEVELOPER_ID
            name = POM_DEVELOPER_NAME
          }
        }
        scm {
          connection = POM_SCM_CONNECTION
          developerConnection = POM_SCM_DEV_CONNECTION
          url = POM_SCM_URL
        }
      }
    }
  }
}

signing {
  required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

task androidJavadocs(type: Javadoc) {
  source = android.sourceSets.main.java.sourceFiles
}

task androidJavadocsJar(type: Jar) {
  classifier = 'javadoc'
  //basename = artifact_id
  from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  //basename = artifact_id
  from android.sourceSets.main.java.sourceFiles
}

artifacts {
  //archives packageReleaseJar
  archives androidSourcesJar
  archives androidJavadocsJar
}